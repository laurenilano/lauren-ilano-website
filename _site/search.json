[
  {
    "objectID": "resource folder/getting-started-with-r/index.html",
    "href": "resource folder/getting-started-with-r/index.html",
    "title": "Getting Started with R",
    "section": "",
    "text": "Coming Soon"
  },
  {
    "objectID": "resource folder/higher-ed-resources/index.html",
    "href": "resource folder/higher-ed-resources/index.html",
    "title": "Higher Ed specific resources",
    "section": "",
    "text": "Coming Soon"
  },
  {
    "objectID": "posts/set-up/index.html",
    "href": "posts/set-up/index.html",
    "title": "Hello, world!",
    "section": "",
    "text": "This is my second try at having a blog!\nI was motivated to do this because I want to, you know, get out there.\nAlso, I have been using a lot of markdown lately and figured I could just copy and paste stuff from my Obsidian notes into this blog pretty easily. I also recently came across the idea of “learning in public” and really liked it.\nIt appealed to me because I love to learn and often find myself on the absorb side of the absorb/expunge binary. Its a spectrum I’m sure, but I have relegated myself to an extreme pole…\nAnyways, I am always learning and often feel too ashamed to say or post something unless its perfect and I am coming to realize that if I wait that long, the world will end! So hello, world! Here is me learning."
  },
  {
    "objectID": "posts/duck-db-paste/index.html#i-cant-create-my-ugly-frankenstein-keys-using-duckdb-because-my-precious-na-strings-go-missing",
    "href": "posts/duck-db-paste/index.html#i-cant-create-my-ugly-frankenstein-keys-using-duckdb-because-my-precious-na-strings-go-missing",
    "title": "Quirks when pasting in duckdb",
    "section": "I can’t create my ugly frankenstein keys using duckdb because my precious NA strings go missing!",
    "text": "I can’t create my ugly frankenstein keys using duckdb because my precious NA strings go missing!\nAt my workplace, we do not have the luxury of having reliable student IDs for each record so that means we often use frankenstein keys to join data across sources. When I was going through this arduous process1 trying to join student information back to a National Student Clearinghouse data I discovered a quirk in duckdb() with the paste function. Our frankenstein keys have student information that is sometimes missing so we would expect an NA to appear in our key string.\nLet’s take a simplified example. Our key could have the student’s application ID, their birthday, and matriculation term all separated by a period. We would expect our key to look something like this:\n123456789.20000101.20184\nIf the birthday was missing for some reason, our key would be:\n123456789.NA.20184\nIn order to match across sources, the NA string is really important! But, when I was passing my parquet files from arrow to duckdb and using paste, I kept getting this:\n123456789.20184"
  },
  {
    "objectID": "posts/duck-db-paste/index.html#footnotes",
    "href": "posts/duck-db-paste/index.html#footnotes",
    "title": "Quirks when pasting in duckdb",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI am being dramatic because it really isn’t that bad↩︎"
  },
  {
    "objectID": "posts/api-keys/index.html",
    "href": "posts/api-keys/index.html",
    "title": "Saving API Keys to an .Renviron file",
    "section": "",
    "text": "Sometimes you have information that you want R to be able to access, without having to type it in every time. We do this all the time in a session when we create variables that hold a piece of information like a threshold value. But, sometimes you have variables that you want to set to access during all your sessions which is where the .Renviron file comes in. Setting environment variables in .Renviron is a convenient way to make the information available to all R sessions without having to type them in every time. These environment variables can be used to store various information such as the path to a data directory, API keys, and other important information that you don’t want to hardcode in your R scripts.\nWhen I was working on my dissertation, I never thought twice about hardcoding API keys because all the code was for my eyes only. (Unfortunately, that also introduced a whole host of issues related to clarity and just basic organization, but that is for another day.)\nAfter leaving academia and working in more collaborative environments, I really had to be more disciplined in my coding by becoming more careful about keeping my API keys and passwords private. I think in general, its just good practice to avoid hardcoding passwords–I mean, it seems pretty obvious to me now–but it never really came up in the courses I took.1\n\nIn this blog, I’ll walk you through creating the .Renviron file and how to use it to store an API Key. In particular, we will create and store an API Key for the College Scorecard dataset. You can manually download College Scorecard data, but we can also connect to the API and get data directly into R using the rscorecard package 2 developed by Ben Skinner.\n\n\n\n\n\n\nBack-up…what is an API?\n\n\n\n\n\nAPI stands for Application Programming Interface and it essentially allows you to connect to the data elements that underlie a particular website. Zapier has a really good Introduction to APIs tutorial here.\nThe College Scorecard site was designed to be a useful tool for students to compare different institutions and there is a user interface that allows you to filter based on many different characteristics like cost, graduation rate, geographic location, etc. The interface is nice and all, but we can use the API to access the underlying data if we want to analyze it on our own."
  },
  {
    "objectID": "posts/api-keys/index.html#getting-a-college-scorecard-api-key",
    "href": "posts/api-keys/index.html#getting-a-college-scorecard-api-key",
    "title": "Saving API Keys to an .Renviron file",
    "section": "Getting a College Scorecard API Key",
    "text": "Getting a College Scorecard API Key\nOk, so in order to set up our API key, we need to get one! If we go to the College Scorecard documentation site we can sign up for an API key using the form at the bottom of the page. After confirming we are not a bot, we just have to fill out our name and email address. In a few minutes, we will receive an email with our 40-character API key. \n\n\n\n\n\n\nWhy do I need this pesky key??\n\n\n\n\n\nThey want to know who to come after (or ban) if you violate their terms. Don’t share your key because someone could do bad things and get you in trouble.\n\n\n\nNow that we have our API key, all we need to do is type the following into our .Renviron file:\n\nGOV_API_KEY=\"{your_40_digit_key}\"\n\nNow that we’ve set up our key, let’s try to use it. # Using environment variables in R\nOnce you have set the environment variables in .Renviron, you can use them in R by using the Sys.getenv() function.\n\n\n\n\n\n\nImportant\n\n\n\nMake sure to restart your R session after saving your .Renviron file!\n\n\nWe can test to make sure our environment variable is accessible to us by running the Sys.getenv() function. If we set up our environment variable correctly, we should see our 40-digit key in the console output after running this code:\n\nSys.getenv(GOV_API_KEY)\n\n[1] \"\""
  },
  {
    "objectID": "posts/api-keys/index.html#downloading-scorecard-data",
    "href": "posts/api-keys/index.html#downloading-scorecard-data",
    "title": "Saving API Keys to an .Renviron file",
    "section": "Downloading Scorecard Data",
    "text": "Downloading Scorecard Data\nThe rscorecard package is a great API wrapper in the R language that allows us to make API calls in the comfort of R. I encourage you to check out the package documentation for more information on all the package features.\nThe first thing you need to do when using the package is registering your API key in your R environment. The package has a function sc_key() that you use to set your API key, but in the documentation they suggest hardcoding your API key, which we are trying to avoid.\n\n# Example from rscorecard documentation:\n\n## use your real key in place of the Xs\nsc_key('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')\n\nLet’s try it by referencing the variable in our .Renviron file to demonstrate how our method allows for the same functionality without having to hardcode our API key in our script. Following the documentation, run the sc_key() function with to register our API key using the variable we set in .Renviron.\n\nlibrary(rscorecard)\nsc_key(Sys.getenv(\"GOV_API_KEY\"))\n\nDATAGOV_API_KEY environment variable now set. You may now use sc_get() without specifying a key.\n\n\nNow that we’ve set up our key, let’s request some data. Let’s get a list of HBCUs by state.\n\nsc_init() %&gt;%\n  sc_filter(hbcu==1) %&gt;%\n  sc_select(unitid, instnm, stabbr, hbcu) %&gt;%\n  sc_year('latest') %&gt;%\n  sc_get() %&gt;%\n  head()\n\nLarge request will require: 1 additional pulls.\n\n\nRequest additional chunk 1\n\n\nRequest complete!\n\n\n# A tibble: 6 × 5\n  unitid instnm                                            stabbr  hbcu year  \n   &lt;int&gt; &lt;chr&gt;                                             &lt;chr&gt;  &lt;int&gt; &lt;chr&gt; \n1 100654 Alabama A & M University                          AL         1 latest\n2 100724 Alabama State University                          AL         1 latest\n3 101240 Gadsden State Community College                   AL         1 latest\n4 101462 J. F. Drake State Community and Technical College AL         1 latest\n5 101569 Lawson State Community College                    AL         1 latest\n6 101675 Miles College                                     AL         1 latest\n\n\nGreat! It seems to work and we didn’t have to hardcode our API key. Now we can freely share the code with collaborators without having to worry that our private key will be compromised. And better yet, if they have their .Renviron variable set up, they can run the code and it will just work."
  },
  {
    "objectID": "posts/api-keys/index.html#footnotes",
    "href": "posts/api-keys/index.html#footnotes",
    "title": "Saving API Keys to an .Renviron file",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nJim Hester and Jenny Bryan have a great book that teaches how to create dot files and other important, but often overlooked things called What they forgot to teach you about R. The book also has the best domain ever: https://rstats.wtf/↩︎\nYou can access the full package documentation here↩︎"
  },
  {
    "objectID": "posts/tableau-color-palette/index.html",
    "href": "posts/tableau-color-palette/index.html",
    "title": "Adding Color Palettes to Tableau",
    "section": "",
    "text": "I’m not the most creative person and visualizations are not my favorite thing to work on (sorry!). With that being said, I’m always on the lookout for easy tricks that make it look like I spent more time on a visualization than I actually did 0:) In this blog, I’ll go over how to add a custom color palette to Tableau.\nOne of my favorite things to do is to use custom color palettes because it gives the impression of a more polished product without too much effort. To me, its part of the Pareto principle in action and I’m all for that."
  },
  {
    "objectID": "projects folder/Faculty Diversity/index.html",
    "href": "projects folder/Faculty Diversity/index.html",
    "title": "(Lack of) Faculty Diversity",
    "section": "",
    "text": "As a consultant for EdTrust, I contributed to a report which examined faculty diversity relative to student diversity, as well as hiring equity, tenure equity, and changes in faculty representation over time for Black and Latino faculty. Using publicly-available IPEDS data, we developed four metrics to assess faculty diversity at public, four-year universities.\nThe findings were not surprising. University faculty don’t reflect the demographics of their students and at more than half the universities in the sample, when faculty of color are hired they are are not on the tenure track. Mere representational diversity of faculty will not fix white supremacy in academia, especially when faculty of color are are subject to hostile climates1, presumed incompetence2, and structural racism. It’s necessary, but woefully insufficient.\nSee the full Faculty Diversity Report here"
  },
  {
    "objectID": "projects folder/Faculty Diversity/index.html#footnotes",
    "href": "projects folder/Faculty Diversity/index.html#footnotes",
    "title": "(Lack of) Faculty Diversity",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nGriffin, K. 2019. Institutional barriers, strategies, and benefits to increasing the representation of Women and Men of Color in the professoriate. Higher Education: The handbook of theory and research. https://link.springer.com/referenceworkentry/10.1007/978-3-030-11743-6_4-1↩︎\nGutierrez y Muhs, G., Niemann, Y.F., Gonzalez, C., Harris, A., 2012. Presumed incompetent: The intersections of race and class for women in academia. University Press of Colorado. https://upcolorado.com/utah-state-university-press/item/2338-presumed-incompetent↩︎"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Texas HEERF Spending Data Tool\n\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2024\n\n\n\n\n\n\n  \n\n\n\n\nDual Enrollment for Equitable Completion\n\n\n\n\n\n\n\n\n\n\n\n\nJan 27, 2024\n\n\n\n\n\n\n  \n\n\n\n\n(Lack of) Faculty Diversity\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 4, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lauren Ilano",
    "section": "",
    "text": "I am a higher education researcher by day (but preferably night) and a lifelong student. I love to read, hate to write, but enjoy torturing myself so here is a blog! I’m about 20 years late to the party which pretty much tells you everything you need to know about me. Oh, and I love cats because of course I do.\n\n\n See all"
  },
  {
    "objectID": "index.html#recent-blog-posts",
    "href": "index.html#recent-blog-posts",
    "title": "Lauren Ilano",
    "section": "",
    "text": "See all"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Lauren Ilano",
    "section": "",
    "text": "Hi! \nMy name is Lauren.\nWork\n\nCurrently: CSU Chancellor’s Office\nFormerly: Irvine Valley College, UCLA AAP\nConsulting: The Education Trust, The RP Group\n\nEducation\n\nPhD/MA: Higher Education at UCLA\nBA: Psychology and Gender Studies at UC Davis"
  },
  {
    "objectID": "clients.html",
    "href": "clients.html",
    "title": "Client Login",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Helpful Resources",
    "section": "",
    "text": "Posit Primers\n\nReally great set of tutorials for those who are new to R/RStudio.\n\nR for Data Science, by Hadley Wickham\n\nA classic.\n\nHappy Git and GitHub for the useR, by Jenny Bryan\n\nExcellent and straightforward book on how (and why!) to use version control. Especially useful for folks who use the RStudio IDE.\n\nDatacamp\n\nThere are some serious issues with this company… However, I found its courses to be really helpful because you can code-along. I believe the intro to R course is free.\n\nNotes from a Data Witch, Danielle Navarro’s Blog\n\nI am a Danielle Navarro fan girl and read her blog religiously.\n\nFree CompTIA Certification Exams\n\nI like to learn, but did you know you can get free vouchers to take CompTIA certification exams? In particular, at Calbright College (for CA residents) after completing IT coursework, you get a voucher to take the CompTIA A+ exams. I’ve also taken courses at Irvine Valley College (another community college) and got my Linux+ Certification (although the course itself was not free–unlike Calbright). If you are interested in getting IT certs, check out your local community college to see if you can get a voucher for the cert exam."
  },
  {
    "objectID": "resources.html#fa-book-open-free-learning-stuff",
    "href": "resources.html#fa-book-open-free-learning-stuff",
    "title": "Helpful Resources",
    "section": "",
    "text": "Posit Primers\n\nReally great set of tutorials for those who are new to R/RStudio.\n\nR for Data Science, by Hadley Wickham\n\nA classic.\n\nHappy Git and GitHub for the useR, by Jenny Bryan\n\nExcellent and straightforward book on how (and why!) to use version control. Especially useful for folks who use the RStudio IDE.\n\nDatacamp\n\nThere are some serious issues with this company… However, I found its courses to be really helpful because you can code-along. I believe the intro to R course is free.\n\nNotes from a Data Witch, Danielle Navarro’s Blog\n\nI am a Danielle Navarro fan girl and read her blog religiously.\n\nFree CompTIA Certification Exams\n\nI like to learn, but did you know you can get free vouchers to take CompTIA certification exams? In particular, at Calbright College (for CA residents) after completing IT coursework, you get a voucher to take the CompTIA A+ exams. I’ve also taken courses at Irvine Valley College (another community college) and got my Linux+ Certification (although the course itself was not free–unlike Calbright). If you are interested in getting IT certs, check out your local community college to see if you can get a voucher for the cert exam."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nCode Snippets in RStudio\n\n\nEasily standardize front matter in R scripts\n\n\n\n\n\n\nJan 1, 2025\n\n\n\n\n\n\n  \n\n\n\n\nSetting up OpenMP on Apple Silicon Mac\n\n\n\n\n\n\n\n\n\nJan 29, 2024\n\n\n\n\n\n\n  \n\n\n\n\nSetting Up an R Studio Server on the Cloud Using Vultr\n\n\nWhen you just can’t get enough RAM\n\n\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n  \n\n\n\n\nAdding Color Palettes to Tableau\n\n\n\n\n\n\n\n\n\nMar 31, 2023\n\n\n\n\n\n\n  \n\n\n\n\nQuirks when pasting in duckdb\n\n\nWhere the duck did the NAs go?!?!\n\n\n\n\n\n\nMar 24, 2023\n\n\n\n\n\n\n  \n\n\n\n\nSaving API Keys to an .Renviron file\n\n\nWhatever you do, don’t hardcode secret keys…\n\n\n\n\n\n\nMar 4, 2023\n\n\n\n\n\n\n  \n\n\n\n\nHello, world!\n\n\n\n\n\n\n\n\n\nFeb 3, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/tableau-color-palette/index.html#footnotes",
    "href": "posts/tableau-color-palette/index.html#footnotes",
    "title": "Adding Color Palettes to Tableau",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAs an aside, it’s really funny to me how seriously some colleges take their brand identity. It’s especially rich for an institution within a system like UCLA to use blue and gold to differentiate itself from all the other UCs that also use blue and gold. As they state on their brand guidelines website: “UCLA’s colors evoke the blue of the sea and sky and the gold of the sun and wildflowers, especially the California poppy. There’s a brightness to UCLA Blue and UCLA Gold that’s especially appropriate to Southern California, and different from other University of California campuses.” Okay…lol.↩︎\nThis is a useful RGB to HEX converter: https://htmlcolorcodes.com/rgb-to-hex/↩︎"
  },
  {
    "objectID": "posts/rstudio-server-on-vultr/index.html",
    "href": "posts/rstudio-server-on-vultr/index.html",
    "title": "Setting Up an R Studio Server on the Cloud Using Vultr",
    "section": "",
    "text": "I am a happy R user but I do acknowledge that R isn’t the best data management tool because of how memory-intensive it is. I’ve been working on some projects recently that have required me to read in super large flat files, which has become impossible given the memory constraints on my laptop. I purchased a Macbook Air a year ago because I figured that if I ever needed more power I could use some cloud tools or set up a server. I have avoided it until this point, but it has become inevitable so here’s my post on how to set up an R Studio server using Vultr."
  },
  {
    "objectID": "posts/rstudio-server-on-vultr/index.html#footnotes",
    "href": "posts/rstudio-server-on-vultr/index.html#footnotes",
    "title": "Setting Up an R Studio Server on the Cloud Using Vultr",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAt least that’s what they told me… I guess they want to make sure you are going to pay for your usage so they won’t unlock the higher tiers until you have a few months under your belt… I even asked if I could pay up from and they said no :(↩︎\nWhen setting up a Digital Ocean droplet, you wont have to do this step.↩︎\nIf you want more info on how to transfer files using scp, I’d highly recommend IU’s kb site: https://kb.iu.edu/d/agye#:~:text=The%20scp%20command%20uses%20SSH,the%20network%20cannot%20view%20them.↩︎"
  },
  {
    "objectID": "projects folder/DE4EC/index.html",
    "href": "projects folder/DE4EC/index.html",
    "title": "Dual Enrollment for Equitable Completion",
    "section": "",
    "text": "Dual Enrollment for Equitable Completion (DE4EC) is a multi-year collaborative initiative among the Bill & Melinda Gates Foundation, College Futures Foundation, and Tipping Point Community, carried out with research support provided by RDP Consulting. DE4EC works with 10 CCCs and HS parners to advance equitable dual enrollment.\nThe quantitative report and accompanying briefs use data from CalPASS Plus to identify baseline dual enrollment offerings, disaggregated dual enrollment participation rates, high school outcomes, and college access metrics for the 10 partnerships supported by DE4EC.\nSee the full report here"
  },
  {
    "objectID": "projects folder/Texas HEERF/index.html",
    "href": "projects folder/Texas HEERF/index.html",
    "title": "Texas HEERF Spending Data Tool",
    "section": "",
    "text": "In response to the pandemic, the federal government made one of the most substantial investments ever in the nation’s colleges and universities through the Higher Education Emergency Relief Fund (HEERF). Since 2020, Texas postsecondary institutions have received more than $6.5 billion, of which $2.5 billion was required to be distributed directly to students in the form of emergency aid.\nBased on available reporting from calendar year 2021, the interactive data tool reflects the flow of these funds from the Department of Education to postsecondary institutions in Texas and ultimately to students. The dashboard examines the distribution of emergency aid based on institutional type and sector, student race/ethnicity, and Pell status. We also explore the impact of institutional choice points when deciding whether to require student applications and supporting documentation, as well as trends related to institution-level student retention rates.\nSee the full blog and link to the data tool here"
  },
  {
    "objectID": "posts/multiple-threads-m1-mac/index.html",
    "href": "posts/multiple-threads-m1-mac/index.html",
    "title": "Setting up OpenMP on Apple Silicon Mac",
    "section": "",
    "text": "This blog post is an example of two things:\nI am used to just installing packages in R and having them just work. I honestly did not even pay much attention to the warning I would get when loading fst: “OpenMP was not detected, using single threaded mode.” It wasn’t until someone pointed out that I was only using a single thread that I noticed something was wrong–or performance could’ve been improved if I had paid a bit more attention.\nI am not an expert on why the default mac version of the C-compiler does not support OpenMP. I did however get it to work on my M1 mac so I figured I would document the steps here and share. I am also writing this to my future self to help me through setting this up on future computers.\nSetting Up OpenMP multi threads for data.table and fst()\nxcode-select --install\nbrew\nbrew install pkg-config\nbrew install llvm libomp gcc\nmkdir ~/.R\ntouch ~/.R/Makevars\nLDFLAGS += -L/opt/homebrew/opt/libomp/lib -lomp\nCPPFLAGS += -I/opt/homebrew/opt/libomp/include -Xclang -fopenmp\n# In terminal\nR\ninstall.packages(\"data.table\", type = \"source\")\n\nquit() # quit R\nlibrary(data.table)\ngetDTthreads() # check # of threads\nLDFLAGS += -L/opt/homebrew/opt/libomp/lib -lomp\n# CPPFLAGS += -I/opt/homebrew/opt/libomp/include -Xclang -fopenmp\n\nCXX1X=/opt/homebrew/Cellar/gcc/13.1.0/bin/g++-13 -fopenmp # had to brew install gcc\nCXX98=/opt/homebrew/Cellar/gcc/13.1.0/bin/g++-13 -fopenmp\nCXX11=/opt/homebrew/Cellar/gcc/13.1.0/bin/g++-13 -fopenmp\nCXX14=/opt/homebrew/Cellar/gcc/13.1.0/bin/g++-13 -fopenmp\nCXX17=/opt/homebrew/Cellar/gcc/13.1.0/bin/g++-13 -fopenmp\ncd /opt/homebrew/Cellar/gcc\nls\nR\ninstall.packages(\"fstcore\", type = \"source\")\ninstall.packages(\"fst\", type = \"source\")\nquit()\nlibrary(fst)\nthreads_fst()\n\n[1] 8"
  },
  {
    "objectID": "posts/multiple-threads-m1-mac/index.html#footnotes",
    "href": "posts/multiple-threads-m1-mac/index.html#footnotes",
    "title": "Setting up OpenMP on Apple Silicon Mac",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nand yet, I will continue to stan and it will always be my preferred OS so plz don’t try and change my mind.↩︎"
  },
  {
    "objectID": "posts/r-snippets/index.html",
    "href": "posts/r-snippets/index.html",
    "title": "Code Snippets in RStudio",
    "section": "",
    "text": "Happy New Year! In 2025, one of my goals is to learn how to do the small things more efficiently. To accomplish this, I want to begin using more code snippets (and shortcuts) in RStudio to avoid repetitive script set-up. When I was at a previous job, one of my coworkers always had very consistent scripts with header info, a standard set of packages, default options set, and even the hexcodes for our brand colors to use in ggplot. He was a wizard and didn’t use RStudio and I honestly just figured it was some emacs magic that was inaccessible to me so I didn’t really dig any further. 1\nIn this blog, I’ll go over how I set up and use my code snippet that contains the information I’d like to have at the beginning of all my R scripts. Code snippets are essentially macros that allow you to type out a keyword that corresponds to a larger chunk of code, thereby saving you keystrokes. They can get quite complicated, but my use-case is quite simple.\nThe code snippet functionality is already built into R Studio and to see what code snippets are already available, just go to Tools &gt; Edit Code Snippets… and you should see the following:\nLines 2 and 3 show the code needed to create a code snippet that allow you to save a few keys when installing a package. If you go to an R script and type “lib” and then TAB, you should see the text autocomplete “library().”\nWe can easily add our own snippets by typing snippet and our keyword along with the code we would like to insert on the following lines. Make sure that the code you’d like to insert after typing the keyword is indented. My header code is included in the screenshot below:\nFor my header, I wanted to include the file name2, a placeholder where I can write a description of the file, and basic information like my name, when the file was created, and a space for notes. I also added in common libraries I use. As noted above, you can also set default options or commonly used parameters. Now, when I open up a new R Script, I can just type “myinit” and hit tab and all of this information will populate.\nI will probably tinker around with this a bit more, but for now, I’m just happy at how easy it was to save 10 seconds :P"
  },
  {
    "objectID": "posts/r-snippets/index.html#footnotes",
    "href": "posts/r-snippets/index.html#footnotes",
    "title": "Code Snippets in RStudio",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOk, fine I did pry further and fell into a huge emacs/ESS hole and became overwhelmed and gave up several times! Luckily, I came across code snippets in RStudio during one of my despair spirals.↩︎\nNote that you need to save the R script in order for this to work. More information on getting the current path of a file is available here: https://stackoverflow.com/questions/47044068/get-the-path-of-current-script↩︎"
  }
]